scalar BigInt

"""
Boolean expression comparing fields on type "BigInt"
"""
input BigIntFilter {
  eq: BigInt
  gt: BigInt
  gte: BigInt
  in: [BigInt!]
  lt: BigInt
  lte: BigInt
  neq: BigInt
}

"""
Boolean expression comparing fields on type "Boolean"
"""
input BooleanFilter {
  eq: Boolean
  gt: Boolean
  gte: Boolean
  in: [Boolean!]
  lt: Boolean
  lte: Boolean
  neq: Boolean
}

scalar Cursor

scalar Date

"""
Boolean expression comparing fields on type "Date"
"""
input DateFilter {
  eq: Date
  gt: Date
  gte: Date
  in: [Date!]
  lt: Date
  lte: Date
  neq: Date
}

scalar Datetime

"""
Boolean expression comparing fields on type "Datetime"
"""
input DatetimeFilter {
  eq: Datetime
  gt: Datetime
  gte: Datetime
  in: [Datetime!]
  lt: Datetime
  lte: Datetime
  neq: Datetime
}

"""
Boolean expression comparing fields on type "Float"
"""
input FloatFilter {
  eq: Float
  gt: Float
  gte: Float
  in: [Float!]
  lt: Float
  lte: Float
  neq: Float
}

"""
Boolean expression comparing fields on type "Int"
"""
input IntFilter {
  eq: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  neq: Int
}

scalar JSON

"""
Boolean expression comparing fields on type "JSON"
"""
input JSONFilter {
  eq: JSON
  neq: JSON
}

"""The root type for creating and mutating data"""
type Mutation {
  """Deletes zero or more records from the collection"""
  deleteFrombuydonutCollection(
    """
    The maximum number of records in the collection permitted to be affected
    """
    atMost: Int! = 1

    """Restricts the mutation's impact to records matching the critera"""
    filter: buydonutFilter
  ): buydonutDeleteResponse!

  """Deletes zero or more records from the collection"""
  deleteFrommisterdonutCollection(
    """
    The maximum number of records in the collection permitted to be affected
    """
    atMost: Int! = 1

    """Restricts the mutation's impact to records matching the critera"""
    filter: misterdonutFilter
  ): misterdonutDeleteResponse!

  """Deletes zero or more records from the collection"""
  deleteFromprofileCollection(
    """
    The maximum number of records in the collection permitted to be affected
    """
    atMost: Int! = 1

    """Restricts the mutation's impact to records matching the critera"""
    filter: profileFilter
  ): profileDeleteResponse!

  """Adds one or more `buydonutInsertResponse` records to the collection"""
  insertIntobuydonutCollection(objects: [buydonutInsertInput!]!): buydonutInsertResponse

  """Adds one or more `misterdonutInsertResponse` records to the collection"""
  insertIntomisterdonutCollection(objects: [misterdonutInsertInput!]!): misterdonutInsertResponse

  """Adds one or more `profileInsertResponse` records to the collection"""
  insertIntoprofileCollection(objects: [profileInsertInput!]!): profileInsertResponse

  """Updates zero or more records in the collection"""
  updatebuydonutCollection(
    """
    The maximum number of records in the collection permitted to be affected
    """
    atMost: Int! = 1

    """Restricts the mutation's impact to records matching the critera"""
    filter: buydonutFilter

    """
    Fields that are set will be updated for all records matching the `filter`
    """
    set: buydonutUpdateInput!
  ): buydonutUpdateResponse!

  """Updates zero or more records in the collection"""
  updatemisterdonutCollection(
    """
    The maximum number of records in the collection permitted to be affected
    """
    atMost: Int! = 1

    """Restricts the mutation's impact to records matching the critera"""
    filter: misterdonutFilter

    """
    Fields that are set will be updated for all records matching the `filter`
    """
    set: misterdonutUpdateInput!
  ): misterdonutUpdateResponse!

  """Updates zero or more records in the collection"""
  updateprofileCollection(
    """
    The maximum number of records in the collection permitted to be affected
    """
    atMost: Int! = 1

    """Restricts the mutation's impact to records matching the critera"""
    filter: profileFilter

    """
    Fields that are set will be updated for all records matching the `filter`
    """
    set: profileUpdateInput!
  ): profileUpdateResponse!
}

"""Defines a per-field sorting order"""
enum OrderByDirection {
  """Ascending order, nulls first"""
  AscNullsFirst

  """Ascending order, nulls last"""
  AscNullsLast

  """Descending order, nulls first"""
  DescNullsFirst

  """Descending order, nulls last"""
  DescNullsLast
}

type PageInfo {
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

"""The root type for querying data"""
type Query {
  """A pagable collection of type `buydonut`"""
  buydonutCollection(
    """Query values in the collection after the provided cursor"""
    after: Cursor

    """Query values in the collection before the provided cursor"""
    before: Cursor

    """Filters to apply to the results set when querying from the collection"""
    filter: buydonutFilter

    """Query the first `n` records in the collection"""
    first: Int

    """Query the last `n` records in the collection"""
    last: Int

    """Sort order to apply to the collection"""
    orderBy: [buydonutOrderBy!]
  ): buydonutConnection

  """A pagable collection of type `misterdonut`"""
  misterdonutCollection(
    """Query values in the collection after the provided cursor"""
    after: Cursor

    """Query values in the collection before the provided cursor"""
    before: Cursor

    """Filters to apply to the results set when querying from the collection"""
    filter: misterdonutFilter

    """Query the first `n` records in the collection"""
    first: Int

    """Query the last `n` records in the collection"""
    last: Int

    """Sort order to apply to the collection"""
    orderBy: [misterdonutOrderBy!]
  ): misterdonutConnection

  """A pagable collection of type `profile`"""
  profileCollection(
    """Query values in the collection after the provided cursor"""
    after: Cursor

    """Query values in the collection before the provided cursor"""
    before: Cursor

    """Filters to apply to the results set when querying from the collection"""
    filter: profileFilter

    """Query the first `n` records in the collection"""
    first: Int

    """Query the last `n` records in the collection"""
    last: Int

    """Sort order to apply to the collection"""
    orderBy: [profileOrderBy!]
  ): profileConnection
}

"""
Boolean expression comparing fields on type "String"
"""
input StringFilter {
  eq: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  neq: String
}

scalar Time

"""
Boolean expression comparing fields on type "Time"
"""
input TimeFilter {
  eq: Time
  gt: Time
  gte: Time
  in: [Time!]
  lt: Time
  lte: Time
  neq: Time
}

scalar UUID

"""
Boolean expression comparing fields on type "UUID"
"""
input UUIDFilter {
  eq: UUID
  in: [UUID!]
  neq: UUID
}

type buydonut {
  buy_date: Date
  created_at: Datetime
  id: BigInt!
  misterdonut: misterdonut
  misterdonut_id: BigInt
  user_id: UUID
}

type buydonutConnection {
  edges: [buydonutEdge!]!
  pageInfo: PageInfo!
}

type buydonutDeleteResponse {
  """Count of the records impacted by the mutation"""
  affectedCount: Int!

  """Array of records impacted by the mutation"""
  records: [buydonut!]!
}

type buydonutEdge {
  cursor: String!
  node: buydonut!
}

input buydonutFilter {
  buy_date: DateFilter
  created_at: DatetimeFilter
  id: BigIntFilter
  misterdonut_id: BigIntFilter
  user_id: UUIDFilter
}

input buydonutInsertInput {
  buy_date: Date
  created_at: Datetime
  misterdonut_id: BigInt
  user_id: UUID
}

type buydonutInsertResponse {
  """Count of the records impacted by the mutation"""
  affectedCount: Int!

  """Array of records impacted by the mutation"""
  records: [buydonut!]!
}

input buydonutOrderBy {
  buy_date: OrderByDirection
  created_at: OrderByDirection
  id: OrderByDirection
  misterdonut_id: OrderByDirection
  user_id: OrderByDirection
}

input buydonutUpdateInput {
  buy_date: Date
  created_at: Datetime
  misterdonut_id: BigInt
  user_id: UUID
}

type buydonutUpdateResponse {
  """Count of the records impacted by the mutation"""
  affectedCount: Int!

  """Array of records impacted by the mutation"""
  records: [buydonut!]!
}

type misterdonut {
  buydonutCollection(
    """Query values in the collection after the provided cursor"""
    after: Cursor

    """Query values in the collection before the provided cursor"""
    before: Cursor

    """Filters to apply to the results set when querying from the collection"""
    filter: buydonutFilter

    """Query the first `n` records in the collection"""
    first: Int

    """Query the last `n` records in the collection"""
    last: Int

    """Sort order to apply to the collection"""
    orderBy: [buydonutOrderBy!]
  ): buydonutConnection
  category: String
  created_at: Date
  description: String
  id: BigInt!
  img: String
  name: String
  price: BigInt
  row: JSON
}

type misterdonutConnection {
  edges: [misterdonutEdge!]!
  pageInfo: PageInfo!
}

type misterdonutDeleteResponse {
  """Count of the records impacted by the mutation"""
  affectedCount: Int!

  """Array of records impacted by the mutation"""
  records: [misterdonut!]!
}

type misterdonutEdge {
  cursor: String!
  node: misterdonut!
}

input misterdonutFilter {
  category: StringFilter
  created_at: DateFilter
  description: StringFilter
  id: BigIntFilter
  img: StringFilter
  name: StringFilter
  price: BigIntFilter
}

input misterdonutInsertInput {
  category: String
  created_at: Date
  description: String
  img: String
  name: String
  price: BigInt
  row: JSON
}

type misterdonutInsertResponse {
  """Count of the records impacted by the mutation"""
  affectedCount: Int!

  """Array of records impacted by the mutation"""
  records: [misterdonut!]!
}

input misterdonutOrderBy {
  category: OrderByDirection
  created_at: OrderByDirection
  description: OrderByDirection
  id: OrderByDirection
  img: OrderByDirection
  name: OrderByDirection
  price: OrderByDirection
}

input misterdonutUpdateInput {
  category: String
  created_at: Date
  description: String
  img: String
  name: String
  price: BigInt
  row: JSON
}

type misterdonutUpdateResponse {
  """Count of the records impacted by the mutation"""
  affectedCount: Int!

  """Array of records impacted by the mutation"""
  records: [misterdonut!]!
}

type profile {
  avatar_url: String
  id: UUID!
  updated_at: Datetime
  username: String
  website: String
}

type profileConnection {
  edges: [profileEdge!]!
  pageInfo: PageInfo!
}

type profileDeleteResponse {
  """Count of the records impacted by the mutation"""
  affectedCount: Int!

  """Array of records impacted by the mutation"""
  records: [profile!]!
}

type profileEdge {
  cursor: String!
  node: profile!
}

input profileFilter {
  avatar_url: StringFilter
  id: UUIDFilter
  updated_at: DatetimeFilter
  username: StringFilter
  website: StringFilter
}

input profileInsertInput {
  avatar_url: String
  id: UUID
  updated_at: Datetime
  username: String
  website: String
}

type profileInsertResponse {
  """Count of the records impacted by the mutation"""
  affectedCount: Int!

  """Array of records impacted by the mutation"""
  records: [profile!]!
}

input profileOrderBy {
  avatar_url: OrderByDirection
  id: OrderByDirection
  updated_at: OrderByDirection
  username: OrderByDirection
  website: OrderByDirection
}

input profileUpdateInput {
  avatar_url: String
  id: UUID
  updated_at: Datetime
  username: String
  website: String
}

type profileUpdateResponse {
  """Count of the records impacted by the mutation"""
  affectedCount: Int!

  """Array of records impacted by the mutation"""
  records: [profile!]!
}